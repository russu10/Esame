# se il collegamento di due nodi dipende dall'esistenza di una cosa in un altra tabella
# fare 4 tabelle, collega 1-3 e 2-4
# collega 3-4 in caso
"""datediff(data1,data2)"""
#trova la differenza in giorni

"""year(date)"""
#trova l anno in un datetime

"""SELECT>T g1.GeneID AS id1, g2.GeneID AS id2,
             CASE 
                 WHEN g1.Chromosome = g2.Chromosome THEN g1.Chromosome
                 ELSE g1.Chromosome + g2.Chromosome
             END AS somma
      FROM genes g1, genes g2
      WHERE g1.Chromosome <= g2.Chromosome
      GROUP BY g1.GeneID, g2.GeneID"""
# if
"""CASE
WHEN EVENTO 1 THEN SOLUZIONE 1
ELSE SOLUZIONE 2
END"""
max(s.lat) o min()
# trovano il massimo e minimo dei vaori selezionati

between %s and %s
# tra due valori (compresi)

METODI SQL :
1. Funzioni matematiche
ABS(x) ‚Äì Valore assoluto

CEIL(x) o CEILING(x) ‚Äì Arrotonda per eccesso

FLOOR(x) ‚Äì Arrotonda per difetto

ROUND(x[, d]) ‚Äì Arrotonda con d decimali

TRUNC(x[, d]) ‚Äì Tronca decimali (Oracle, PostgreSQL)

POWER(x, y) ‚Äì x elevato alla y

SQRT(x) ‚Äì Radice quadrata

MOD(x, y) ‚Äì Resto della divisione

EXP(x) ‚Äì e^x

LOG(x) ‚Äì Logaritmo naturale

LOG10(x) ‚Äì Logaritmo base 10

RANDOM() / RAND() ‚Äì Numero casuale

PI() ‚Äì Costante œÄ

üïí 2. Funzioni per data e ora
NOW() ‚Äì Data e ora attuali

CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP

DATEPART(unit, date) ‚Äì Estrae parti (SQL Server)

EXTRACT(field FROM date) ‚Äì PostgreSQL  SELECT EXTRACT(YEAR FROM CURRENT_DATE);

DATE_ADD(date, INTERVAL x unit) ‚Äì Somma (MySQL)  SELECT DATE_ADD('2024-01-01', INTERVAL 10 DAY);

DATE_SUB(date, INTERVAL x unit) ‚Äì Sottrai (MySQL)  SELECT DATE_SUB('2024-01-10', INTERVAL 5 DAY);

DATEDIFF(date1, date2) ‚Äì Differenza in giorni

TO_CHAR(date, format) ‚Äì Formatta data (Oracle/PostgreSQL)  SELECT TO_CHAR(NOW(), 'YYYY-MM-DD');

TO_DATE(string, format) ‚Äì Converte stringa in data

üî§ 3. Funzioni per stringhe
CONCAT(s1, s2, ...) ‚Äì Unisce stringhe

SUBSTRING(s, start, length) ‚Äì Estrae sottostringa

LEFT(s, n) / RIGHT(s, n)

LENGTH(s) / CHAR_LENGTH(s) ‚Äì Lunghezza

UPPER(s) / LOWER(s) ‚Äì Maiuscole/minuscole

TRIM(s) ‚Äì Rimuove spazi (oppure LTRIM, RTRIM)

REPLACE(s, old, new)

INSTR(s, substring) / POSITION() ‚Äì Posizione

REVERSE(s) ‚Äì Inverte stringa

LPAD(s, len, pad) / RPAD(s, len, pad) ‚Äì Padding

FORMAT(s, ...) ‚Äì Formattazione (SQL Server, MySQL)

üìä 4. Funzioni di aggregazione
COUNT(*), COUNT(col)

SUM(col)

AVG(col)

MIN(col)

MAX(col)

GROUP_CONCAT(col) ‚Äì Unisce valori in gruppo (MySQL)

STRING_AGG(col, sep) ‚Äì PostgreSQL, SQL Server

üß† 5. Funzioni logiche e di controllo
CASE WHEN THEN ELSE END

IF(condition, true, false) ‚Äì MySQL

NULLIF(expr1, expr2)

COALESCE(val1, val2, ...) ‚Äì Primo valore non nullo

ISNULL(expr) / IFNULL(expr1, expr2)

üìê 6. Funzioni analitiche / window functions
(usate con OVER())

ROW_NUMBER()

RANK(), DENSE_RANK()

NTILE(n)

LAG(col, offset)

LEAD(col, offset)

FIRST_VALUE(col)

LAST_VALUE(col)

SUM(col) OVER(...)

AVG(col) OVER(...)

COUNT() OVER(...)

üß± 7. Funzioni di tipo / casting
CAST(expr AS type)

CONVERT(expr, type) ‚Äì SQL Server/MySQL

::type ‚Äì PostgreSQL (es. price::integer)

üîê 8. Funzioni specifiche per DBMS
UUID() ‚Äì Genera un UUID (MySQL, PostgreSQL)

JSON_EXTRACT, JSON_VALUE, ->, ->> ‚Äì JSON (MySQL/PostgreSQL)

GEOMETRY, ST_Distance, ST_Within ‚Äì Funzioni spaziali (GIS)

REGEXP, REGEXP_REPLACE, REGEXP_MATCHES ‚Äì Espressioni regolari

Extra: Stored Procedure & Metodi (esterni alle query)
Questi non sono ‚Äúfunzioni‚Äù SQL ma sono concetti correlati:

Stored Procedures ‚Äì CREATE PROCEDURE, CALL

Triggers

User-defined functions (UDF) ‚Äì CREATE FUNCTION

Cursors ‚Äì iterazioni sui risultati


